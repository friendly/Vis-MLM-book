```{r include=FALSE}
source("R/common.R")
clean_pkgs()
```


# Preface {.unnumbered}

<!-- **TODO**: Make this a more general introduction -->

This book is about graphical methods developed recently for multivariate data, and their uses in understanding relationships when there are several aspects to be considered together. Data visualization methods for statistical analysis are well-developed for simple linear models with a single outcome variable. However, with applied research in the social and behavioral sciences, it is often the case that the phenomena of interest (e.g., depression, job satisfaction, academic achievement, childhood ADHD disorders, etc.) can be measured in several different ways or related aspects. 

For example, if academic achievement can be measured for adolescents by reading, mathematics, science and history scores, how do predictors such as parental encouragement, school environment and socioeconomic status affect all these outcomes? In a similar way? In different ways? In such cases, much more can be understood from a multivariate approach that considers the correlations among the outcomes. Yet, sadly, researchers typically examine the outcomes one by one which often only tells part of the data story.

However, to do this it is useful to set the stage for multivariate thinking, with a grand scheme for statistics and data visualization, a parable, and an example of multivariate discovery.

```{r child="child/00-one-two-many.qmd"}
#| label: child1
```


```{r child="child/00-flatland.qmd"}
#| label: child2
```

```{r child="child/00-eureka.qmd"}
#| label: child3
```


## What I assume

It is assumed that the reader has a background in applied _intermediate_ statistics including material on univariate linear models
including analysis of variance (ANOVA) and multiple regression. This means you should be familiar with 
... **TODO**: Complete this required background

There will also be some mathematics in the book where words and diagrams are not enough.
The mathematical level will be intermediate, mostly consisting of simple algebra. No derivations, proofs, theorems here!
For multivariate methods, it will be useful to express ideas using matrix notation to simplify presentation. 
The single symbol
I'm using math to express ideas, and all you will need is a reading-level of understanding.
For this, the first chapter of @Fox2021, _A mathematical primer for social statistics_, is excellent.
If you want to learn something of using matrix algebra for data analysis and statistics, I recommend
our package `r pkg("matlib", cite=TRUE)`.

I also assume the reader to have at least a basic familiarity with R.
While R fundamentals are outside the scope of the book, I believe that this language provides a rich set of resources, far beyond that offered by other statistical software packages, and is well worth learning.

For those not familiar with R, I recommend @Matloff-2011, @Wickham2014, and @Cotton-2013 for introductions to programming in the language. @FoxWeisberg:2018 and @Teetor2011 are great for learning about how to conduct basic statistical analyses in R.
**TODO**: Revise this list.

**TODO**: Add stuff on general books about graphics


## Conventions used in this book

**TODO**: Some stuff below is just for testing... Revise.

The following typographic conventions are used in this book:

* _italic_ : indicates terms to be _emphasized_ or defined in the text, ...

* **bold** : is used for ...

* Package names are printed in **bold* and colored.
  I can now use inline 'pkg("lattice")' generating `r pkg("lattice")`, or also with a citation,
  `pkg("lattice", cite=TRUE)` -> `r pkg("lattice", cite=TRUE)`.
  Can also refer to the `r package("matlib", cite=TRUE)`, including "package" between the name and citation.

* Datasets are rendered as `r dataset("prestige", "car")` or `r dataset("car::prestige")`. Some other nice datasets are `r dataset("Penguin", "palmerpenguins")`, `r dataset("cars", "VisCollin")`,
`r dataset("mathscore", "heplots")`

* `fixed-width` : is used in program listings as well as in text to refer to variable and function names, R statement elements and keywords.

* R code in program listings and output is presented in `monospaced (typewriter)` font,
  [`fira mono`](https://fonts.google.com/specimen/Fira+Mono)

* _`fixed-width italic`_ : isn't used yet, but probably should be.

For R functions in packages, we use the notation `package::function()`, for example: `car::Anova()` to identify where those functions are defined



<!-- ## References {.unnumbered} -->

\mainmatter
