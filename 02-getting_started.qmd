```{r include=FALSE}
source("R/common.R")
```

# Getting Started {#sec-getting_started}

```{r include=FALSE}
library(ggplot2) 
library(tidyverse)
library(broom)
ggplot2::theme_set(theme_bw(base_size = 16))
```


## Why plot your data? {#sec-why_plot}

> Getting information from a table is like extracting sunlight from a cucumber. @FarquharFarquhar:91

At the time the Farhquhar brothers wrote this pithy aphorism, graphical methods for understanding data had advanced considerably, but were not universally practiced, prompting their complaint.

The main graphic forms we use today---the pie chart, line graphs and bar---were invented by William Playfair around 1800 [@Playfair:1786; @Playfair:1801]. The scatterplot arrived shortly after [@Herschel:1833] and thematic maps showing
the spatial distributions of social variables (crime, suicides, literacy)
were used for the first time to reason about important societal questions
[@Guerry:1833] such as "is increased education associated with lower rates of crime?" 

In the last half of the 18th Century, the idea of correlation was
developed [@Galton:1886; @Pearson:1896] and the period, roughly 1860--1890, dubbed
the "Golden Age of Graphics [@Funkhouser:1937]
became the richest period of innovation and beauty in the entire
history of data visualization. During this time there was an incredible development
of visual thinking, represented by the work of Charles Joseph Minard,
advances in the role of visualization within scientific discovery, as illustrated
through Francis Galton, and graphical excellence, embodied in state statistical
atlases produced in France and elsewhere. See @Friendly:2008:golden; @FriendlyWainer:2021:TOGS for this history.

```{r child="child/02-anscombe.qmd"}
```

```{r child="child/02-davis.qmd"}
```


## Plots for data analysis


Visualization methods take an enormous variety of forms,  but it is useful to distinguish several broad categories according to their use in data analysis:

* __data plots__ : primarily plot the raw data, often with annotations to aid interpretation (regression lines and smooths, data ellipses, marginal distributions)

* __reconnaissance plots__ : with more than a few variables, reconnaissance plots provide a high-level,
bird's-eye overview of the data, allowing you to see patterns that might not be visible in a set of separate plots. Some examples are scatterplot matrices, showing all bivariate plots of variables
in a data set; correlation diagrams, using visual glyphs to represent the correlations between
all pairs of variables and "trellis" or faceted plots that show how a focal relation of
one or more variables differs across values of other variables.

* __model plots__ :  plot the results of a fitted model, such as a regression line or curve
to show uncertainty, or a regression surface in 3D, or a plot of coefficients in model
together with confidence intervals.
Other model plots try to take into account that 
a fitted model may involve more variables than can be shown in a static 2D plot.
Some examples of these are added variable plots, and marginal effect plots, both of which
attempt to show the net relation of two focal variables, controling or adjusting for other variables
in a model.

* __diagnostic plots__ : indicating potential problems with the fitted model. These include residual plots, influence plots, plots for testing homogeneity of variance and so forth.

* __dimension reduction plots__ : plot representations of the data into a space of fewer dimensions than the number of variables in the data set. Simple examples include principal components analysis (PCA) and the related biplots, and multidimensional scaling (MDS) methods.

We give some more details and a few examples in the sections that follow.


## Data plots

Data plots portray the data in a space where the coordinate axes are the observed variables.

*   1D plots include line plots, histograms and density estimates.
*   2D plots are most often scatterplots, but contour plots or hex-binned plots are also useful when the sample size is large.
<!-- *   For higher dimensions, biplots, showing the data in principal components space, together with vectors representing the correlations among variables, are often the most useful. -->


## Model plots

## Diagnostic plots


```{r}
cat("Writing packages to ", .pkg_file, "\n")
write_pkgs(file = .pkg_file)
```

## References {.unnumbered}
