---
title: "Using colored text in Quarto figure captions"
format:
  html:
    toc: true
  pdf:
    toc: true
---
  
In figure captions, it is often useful to say refer to colored objects by printing
the words in their colors.
How can I do this with output in HTML or PDF?

Define a function to colorize text, that can be used in HTML or PDF output

```{r colorize}
# colorize text: use inline as `r colorize(text, color)` to print `text` in a given `color`
# can also be used to color a color name, as in r colorize("red")`
colorize <- function(text, color) {
  if (missing(color)) color <- text
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{%s}", color, text)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'>%s</span>", color, text)
  } else text
}
```

I can print text in `r colorize("red")`, `r colorize("blue")`, `r colorize("green")`, ... `

But not in a figure caption.

This works without color text in the caption:

````
#| label: fig-test
#| out-width: "70%"
#| fig-cap: Some points should be red, some blue, some green
cols <- c("red", "blue", "green")
plot(1:10, pch=16, cex = 3, col = cols)
````

```{r}
#| label: fig-test
#| out-width: "70%"
#| fig-cap: Some points should be red, some blue, some green
cols <- c("red", "blue", "green")
plot(1:10, pch=16, cex = 3, col = cols)
```

This doesn't work:

````
#| label: fig-test2
#| out-width: "70%"
#| fig-cap: Some points are `r colorize("red")`, some are `r colorize("blue")`, some are `r colorize("green")`
cols <- c("red", "blue", "green")
plot(1:10, pch=16, cex = 3, col = cols)
````

```{r}
#| label: fig-test2
#| out-width: "70%"
#| fig-cap: Some points are `r colorize("red")`, some are `r colorize("blue")`, some are `r colorize("green")`
cols <- c("red", "blue", "green")
plot(1:10, pch=16, cex = 3, col = cols)
```





