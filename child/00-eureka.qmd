## EUREKA!

Even modest sized multivariate data can have secrets that can be revealed in the right view.
As an example, David Coleman at RCA Laboratories in Princeton, N.J. generated a dataset of
five (fictitious) measurements of grains of pollen for the 1986 Data Exposition at the
Joint statistical Meetings.
The first three variables are the lengths of geometric features 3848 observed sampled pollen grains -- in the x, y, and z dimensions: a `ridge` along x, a `nub` in the y
direction, and a `crack` in along the z dimension.  The fourth
variable is pollen grain `weight`, and the fifth is `density`.
The challenge was to "find something interesting" in this dataset.

Those who solved the puzzle were able to find an orientation of this 5-dimensional dataset, such that
zooming in revealed a magic word, "EUREKA" spelled in points, as in the following figure.

::: {#fig-pollen-eureka layout-nrow=2}
![](images/pollen-eureka1.png){width=40%}

![](images/pollen-eureka2.png){width=40%}

![](images/pollen-eureka4.png){width=40%}

![](images/pollen-eureka3.png){width=40%}

Four views of the `pollen` data, zooming in, clockwise from the upper left to discover the word "EUREKA".

:::

This can be seen better in a 3D animation. `rgl` [@R-rgl] is used to create a 3D scatterplot of the first three
variables. Then the `animation` package [@R-animation] is use to record a sequence of images, adjusting the
`rgl::par3d(zoom)` value.

```{r}
#| label: pollen-eureka-code
#| code-fold: true
#| eval: false
library(animation)
library(rgl)
data(pollen, package = "animation")
oopt = ani.options(interval = 0.05)
## adjust the viewpoint
uM =
  matrix(c(-0.370919227600098, -0.513357102870941,
           -0.773877620697021, 0, -0.73050606250763, 0.675815105438232,
           -0.0981751680374146, 0, 0.573396027088165, 0.528906404972076,
           -0.625681936740875, 0, 0, 0, 0, 1), 4, 4)
open3d(userMatrix = uM, 
       windowRect = c(10, 10, 510, 510))

plot3d(pollen[, 1:3])

# zoom in
zm = seq(1, 0.045, length = 200)
par3d(zoom = 1)
for (i in 1:length(zm)) {
  par3d(zoom = zm[i])
  ani.pause()
}
ani.options(oopt)
```


::: {#fig-pollen-eureka-fig}

<center>
<iframe width="560" height="315" src="images/pollen-eureka.gif"></iframe>
</center>

Animation of zooming in on the `pollen` data.
:::

Lest this example seem contrived (which it admittedly is), multivariate visualization has played an important role in quite a few scientific discoveries. Among these **TODO** ... diabetes classification ....
